---
  - name: Установка Hadoop на кластер
    hosts: hadoop_cluster
    vars:
      ansible_remote_tmp: /tmp
      hadoop_version: 3.4.0
      hadoop_install_dir: /opt/hadoop
      hadoop_user: hadoop
      master_node: "team-42-nn"

    tasks:
      - name: Создание пользователя hadoop
        user:
          name: "{{ hadoop_user }}"
          shell: /bin/bash
          create_home: yes

      - name: Установка необходимых пакетов
        become: yes
        apt:
          name:
            - openjdk-11-jdk
            - tar
            - unzip
            - gzip
          state: present

      - name: Загрузка архива Hadoop
        get_url:
          url: "https://dlcdn.apache.org/hadoop/common/hadoop-{{ hadoop_version }}/hadoop-{{ hadoop_version }}.tar.gz"
          dest: /tmp/hadoop-{{ hadoop_version }}.tar.gz
          mode: "755"
          # checksum: sha512:https://downloads.apache.org/hadoop/common/hadoop-{{ hadoop_version }}/hadoop-{{ hadoop_version }}.tar.gz.sha512

      - name: Распаковка архива Hadoop
        unarchive:
          src: /tmp/hadoop-{{ hadoop_version }}.tar.gz
          dest: /tmp/
          remote_src: yes
          creates: /tmp/hadoop-{{ hadoop_version }}

      - name: Копирование в {{ hadoop_install_dir }}
        command: "cp -r /tmp/hadoop-{{ hadoop_version }} {{ hadoop_install_dir }}"
        args:
          creates: "{{ hadoop_install_dir }}"

      - name: Сделать hadoop владельцем {{ hadoop_install_dir }}
        become: yes
        command: chown -R -h hadoop:hadoop {{ hadoop_install_dir }}

      - name: Настройка переменных окружения для Hadoop
        become: yes
        blockinfile:
          path: /etc/profile.d/hadoop.sh
          create: yes
          block: |
            export JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64
            export HADOOP_HOME={{ hadoop_install_dir }}/
            export HADOOP_MAPRED_HOME={{ hadoop_install_dir }}
            export HADOOP_HDFS_HOME={{ hadoop_install_dir }}
            export HADOOP_HOME={{ hadoop_install_dir }}
            export PATH=$PATH:$HADOOP_HOME/bin:$HADOOP_HOME/sbin

      - name: Создание директории /var/hadoop для hadoop
        become: yes
        file:
          path: /var/hadoop
          state: directory
          owner: hadoop

      - name: Настройка переменных окружения для Hadoop
        become: yes
        blockinfile:
          path: /etc/hosts
          create: yes
          block: |
            192.168.1.171 team-42-nn
            192.168.1.172 team-42-dn-0
            192.168.1.173 team-42-dn-1

      - name: Конфигурация core-site.xml
        become: yes
        become_user: hadoop
        copy:
          dest: "/opt/hadoop/etc/hadoop/core-site.xml"
          src: core-site.xml.j2

      - name: Конфигурация hdfs-site.xml
        become: yes
        become_user: hadoop
        copy:
          dest: /opt/hadoop/etc/hadoop/hdfs-site.xml
          src: hdfs-site.xml.j2

  - name: Генерация пары SSH ключей для кластера Hadoop
    hosts: localhost
    gather_facts: no
    vars:
      ssh_key_file_path: /tmp/hadoop_ssh_key

    tasks:
      - name: Генерация пары SSH ключей для пользователя hadoop (если не существует)
        ansible.builtin.command:
          cmd: "ssh-keygen -t rsa -b 2048 -f {{ ssh_key_file_path }} -q -N ''"
        args:
          creates: "{{ ssh_key_file_path }}"

      - name: Чтение сгенерированного приватного SSH ключа
        slurp:
          src: "{{ ssh_key_file_path }}"
        register: ssh_private_key_content

      - name: Чтение сгенерированного публичного SSH ключа
        slurp:
          src: "{{ ssh_key_file_path }}.pub"
        register: ssh_public_key_content

      - name: Установка фактов для передачи приватного и публичного ключей
        set_fact:
          hadoop_private_key: "{{ ssh_private_key_content['content'] | b64decode }}"
          hadoop_public_key: "{{ ssh_public_key_content['content'] | b64decode }}"

  - name: Распространение SSH ключей на узлы кластера Hadoop
    hosts: hadoop_cluster
    become: yes
    become_user: hadoop
    tasks:
      - name: Создание директории .ssh для пользователя hadoop
        file:
          path: /home/hadoop/.ssh
          state: directory
          mode: "0700"

      - name: Копирование приватного SSH ключа на каждый узел
        copy:
          content: "{{ hostvars['localhost']['hadoop_private_key'] }}"
          dest: "/home/hadoop/.ssh/id_rsa"
          mode: "0600"

      - name: Копирование публичного SSH ключа на каждый узел
        copy:
          content: "{{ hostvars['localhost']['hadoop_public_key'] }}"
          dest: "/home/hadoop/.ssh/id_rsa.pub"
          mode: "0644"

      - name: Добавление публичного ключа в authorized_keys
        authorized_key:
          user: hadoop
          state: present
          key: "{{ hostvars['localhost']['hadoop_public_key'] }}"
          manage_dir: no

      - name: Создание директории для хранения данных DataNode
        file:
          path: /home/hadoop/hdfs/datanode
          state: directory
          owner: hadoop
          mode: 0755

  - name: Конфигурация Hadoop и YARN
    become: yes
    become_user: hadoop
    hosts: hadoop_cluster
    tasks:
      - name: Упоминание существующих datanodes (etc/hadoop/workers)
        copy:
          dest: /opt/hadoop/etc/hadoop/workers
          content: |
            team-42-dn-0
            team-42-dn-1

      - name: Упоминание существующих datanodes (etc/hadoop/workers)
        copy:
          dest: /opt/hadoop/etc/hadoop/workers
          content: |
            team-42-dn-0
            team-42-dn-1

      - name: Конфигурация mapred-site
        copy:
          dest: /opt/hadoop/etc/hadoop/mapred-site.xml
          src: mapred-site.xml.j2

      - name: Конфигурация yarn-site.xml
        copy:
          dest: /opt/hadoop/etc/hadoop/yarn-site.xml
          src: yarn-site.xml.j2

  - name: Запуск Hadoop и YARN
    become: yes
    become_user: hadoop
    hosts: master
    tasks:
      - name: Инициализация хранилища (нобходимо запустить ровно 1 раз)
        run_once: true
        register: init_hadoop_storage
        command: /opt/hadoop/bin/hdfs namenode -format
        ignore_errors: yes

      - name: Остановка Hadoop и YARN (если запущены процессы)
        command: /opt/hadoop/sbin/stop-all.sh

      - name: Старт Hadoop-кластера
        command: /opt/hadoop/sbin/start-dfs.sh

      - name: Старт YARN-кластера
        command: /opt/hadoop/sbin/start-yarn.sh

      - name: Старт YARN History-сервера
        command: /opt/hadoop/sbin/mr-jobhistory-daemon.sh start historyserver
